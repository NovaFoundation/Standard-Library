package "nova/time"

import "nova/time/Interval.InvalidIntervalException"
import "nova/time/Interval.IntervalException"

class BoundlessInterval extends Interval {
    visible Int days => throw new InfiniteIntervalException("days")
    
    visible Long seconds => throw new InfiniteIntervalException("seconds")
    visible Int remainingSeconds => throw new InfiniteIntervalException("remainingSeconds")
    
    visible Long milliseconds => throw new InfiniteIntervalException("milliseconds")
    visible Int remainingMilliseconds => throw new InfiniteIntervalException("remainingMilliseconds")
    
    visible Int months => throw new InfiniteIntervalException("months")
    visible Int remainingMonths => throw new InfiniteIntervalException("remainingMonths")
    
    visible Int years => throw new InfiniteIntervalException("years")
    
    public construct(this super DateTime start, this super DateTime end) {
        if (start != null && end != null) {
            throw new InvalidIntervalException("BoundlessInterval requires a null start or end DateTime: #this")
        }
    }
    
    class InfiniteIntervalException extends IntervalException {
        public construct(String property) => super("Cannot get property '#property' from boundless interval (cannot return infinite integer)")
    }
}