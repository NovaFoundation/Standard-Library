package "nova/time"

/// Class that represents a time interval. The start and end DateTimes indicate
/// the start and end of the time interval. A null value for the start DateTime
/// represents "from the beginning of time", while a null value for the end
/// DateTime represents "to the end of time".
class Interval {
    public DateTime start, end
    
    public Int days =>
        start == null || end == null ? -1 : (Int)((end.millis - start.millis) / DateTime.SECS_DAY)
    
    public construct(this DateTime start = null, this DateTime end = null) {}
    
    public getGap(Interval other) -> Interval {
        /*if (end <= other.start) return new Interval(end, other.start)
        else if (start >= other.end) return new Interval(other.end, start)
        else */throw new NoGapException()
    }
}