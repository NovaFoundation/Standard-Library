package "nova/io"

class FancyOutputStream implements OutputStream {
    public var Int contentWidth = 80
    
    public var String headerPattern = "="
    
    public construct(public OutputStream out = Console.out, public Int contentWidth = 80, public String headerPattern = "=") {}
    
    public writeHeader(Object message) => writeHeader(message.toString())
    public writeHeader(String message, String pattern = headerPattern, String rightPattern = pattern) => this {
        let sideCount = (contentWidth - message.count - 2) / 2
        
        write(pattern.repeat(sideCount / pattern.count))
        write(" ").write(message).write(" ")
        write(rightPattern.repeat(sideCount / rightPattern.count))
        
        if (sideCount > 0 && message.count % 2 == 1) {
            write(rightPattern.substring(end: 1))
        }
        
        writeLine()
    }
    
    public writeSeparator(String pattern = headerPattern) => this {
        writeLine(pattern.repeat(contentWidth))
    }
    
    public write(String value = "") => this { out.write(value) }
    public writeLine(String value = "") => this { out.writeLine(value) }
}