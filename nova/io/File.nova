package "nova/io"

import "nova/io/NativeFile.h"
import "nova/time/Time"
import "tinydir.h"

class File {
    external int getMaxOpenFiles() as extGetMaxOpenFiles
    external void setMaxOpenFiles(int max) as extSetMaxOpenFiles
    external int access(char[] location, int property)
    
    external int F_OK
    
    visible String location
    
    static {
        File exitLog = new File("log#Time.currentTimeMillis")
    }
    
    visible Bool exists => access(location.chars.data, F_OK) != -1
    
    public Int maxOpenFiles {
        get {
            return extGetMaxOpenFiles()
        }

        set {
            Short min = (Short)20
            Short max = (Short)2048

            if (value > max || value < min) {
                Console.writeLine("Invalid max number of open files: #value\nValid values include #{min}-#{max}")
            } else {
                extSetMaxOpenFiles(value)
            }
        }
    }

    public construct(String location) {
        this.location = location
    }

    /*public construct(FILE* fp) {
        this.fp = fp
    }*/
    
    public directoryContents(String location) -> String[] {
        return null
    }
    
    public listFiles(String location) -> String[] {
        return null
    }
    
    
}
