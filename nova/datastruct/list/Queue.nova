package "nova/datastruct/list"

class Queue<E> implements List<E> {
    visible Int size => data.position
    visible Bool empty => size <= 0
    
    [Override]
    visible ArrayIterator<E> iterator => new ArrayIterator(data)
    
    E[] data
    
    public construct() => data = new Array()
    public construct(E[] data) => this.data = data
    
    public dequeue() -> E {
        let element = data[0]
        
        data.remove(0)
        
        return element
    }
    
    public enqueue(E element) => element {
        data.add(element)
    }
    
    public reverse() => new Queue<E>(data.reverse())
    public toString() => "Queue [#{join(", ")}]"
}