package "nova/math"

class Vector
{
	visible Double[] data
	
	visible Double magnitude => Math.sqrt(data.sum(n -> n * n))
	
	public construct(Int size)
	{
		this(new DoubleArray(size))
	}
	
	public construct(Double[] data)
	{
		this.data = data
	}
	
	public dotProduct(Vector other) -> Double
	{
		return data.sum((x, i) -> x * other.data[i])
	}
	
	public innerProduct(Vector other) -> Double
	{
		return dotProduct(other)
	}
	
	public scale(Double scalar)
	{
		data.forEach((n, i, d) -> d[i] = n * scalar)
	}
	
	public normalize()
	{
		Double mag = magnitude
		
		data.forEach((n, i, d) -> d[i] = n / mag)
	}
	
	public toString() -> String
	{
		return "<#{data.join(", ")}>"
	}
}