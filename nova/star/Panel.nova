package "nova/star"

class Panel extends UIComponent implements UIParent {
    public var Int width, height
    
    public var Color backgroundColor
    
    external type WINDOW_ID_TYPE
    [Target c] public external_name var WINDOW_ID_TYPE hwnd
    
    public construct(passing Int x, passing Int y, public Int width = 0, public Int height = 0) {
        super(x, y)
    }
    
    public onAdded() {
        external c {
            if (#{hwnd} == NULL) {
                #ifdef _WIN32
                    #{hwnd} = CreateWindowW(L"Empty Panel", L"", WS_CHILD | WS_VISIBLE,
                        #{absoluteX}, #{absoluteY}, #{width}, #{height}, #{window.hwnd}, NULL, NULL, NULL);
                    
                    SetProp(#{hwnd}, "reference", #{this});
                #endif
            }
        }
    }
    
    public draw() {
        if (backgroundColor) {
            external c {
                #ifdef _WIN32
                    // int x = #{absoluteX};
                    // int y = #{absoluteY};
                    
                    // RECT r = {x, y, x + #{width}, y + #{height}};
                    
                    // HBRUSH brush = CreateSolidBrush();
                    
                    // FillRect(#{window.hdc}, &r, brush);
                    
                    // DeleteObject(brush);
                    
                    RECT r;
                    GetClientRect(#{hwnd}, &r);
                    HBRUSH brush = CreateSolidBrush(RGB(#{backgroundColor.r}, #{backgroundColor.g}, #{backgroundColor.b}));
                    FillRect(#{window.hdc}, &r, brush);
                    DeleteObject(brush);
                #endif
            }
        }
    }
}