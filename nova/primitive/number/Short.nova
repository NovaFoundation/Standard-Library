package "nova/primitive/number"

import "nova/datastruct/Comparable"
import "nova/operators/EqualsOperator"
import "nova/operators/MultiplyOperator"
import "nova/operators/MultiplyEqualsOperator"

immutable class Short extends Number implements Comparable<Short>, Integer, MultiplyOperator<Short, Short>, MultiplyEqualsOperator<Short, Short>, EqualsOperator<Short> {
    construct(private Short value) {}
    
    public compareTo(Short other) => value - other
    public multiply(Short value) => this.value * value
    public multiplyEquals(Short value) => this.value *= value
    public equals(Short value) => this.value == value
    public toString() => toString(value)
    
    public static numDigits(Short number) => Long.numDigits(number)
    public static toString(Short value) => Long.toString(value)
}