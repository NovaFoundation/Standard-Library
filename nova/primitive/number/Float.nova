package "nova/primitive/number"

import "nova/datastruct/Comparable"
import "nova/operators/EqualsOperator"
import "nova/operators/MultiplyOperator"
import "nova/operators/MultiplyEqualsOperator"

immutable class Float extends Number implements Comparable<Float>, RealNumber, MultiplyOperator<Float, Float>, MultiplyEqualsOperator<Float, Float>, EqualsOperator<Float> {
    construct(private Float value) {}
    
    public compareTo(Float other) => value - other
    public multiply(Float value) => this.value * value
    public multiplyEquals(Float value) => this.value *= value
    public equals(Float value) => this.value == value
    public toString() => toString(value)
    
    public static numDigits(Float number) => Double.numDigits(number)
    public static toString(Float value) => Double.toString(value)
}