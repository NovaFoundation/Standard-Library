package "nova/primitive/number"

import "nova/datastruct/Comparable"

class Char extends Number implements Comparable<Char>, Integer {
    public construct(public Char value) {}
    
    public static toLowerCase(Char c) -> Char => c {
        Int id = (Int)c
        
        if (id >= 65 && id <= 90) {
            return (Char)(id + 32)
        }
    }
    
    public static toUpperCase(Char c) -> Char => c {
        Int id = (Int)c
        
        if (id >= 97 && id <= 122) {
            return (Char)(id - 32)
        }
    }
    
    public toLowerCase() => toLowerCase(value)
    public toUpperCase() => toUpperCase(value)
    public compareTo(Char other) => value - other
    public multiply(Char value) => this.value * value
    public multiplyEquals(Char value) => this.value *= value
    public equals(Char value) => this.value == value
    public toString() => toString(value)
    
    public static toString(Char c) => new String(c)
}